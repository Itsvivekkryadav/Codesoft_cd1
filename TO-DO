class ToDoList:
    def __init__(self):
        self.tasks = {}

    def create_task(self, task_id, task_name):
        self.tasks[task_id] = {"name": task_name, "status": "Not Started"}
        print(f"Task {task_id} created: {task_name}")

    def update_task(self, task_id, task_name=None, status=None):
        if task_id in self.tasks:
            if task_name:
                self.tasks[task_id]["name"] = task_name
            if status:
                self.tasks[task_id]["status"] = status
            print(f"Task {task_id} updated")
        else:
            print(f"Task {task_id} not found")

    def delete_task(self, task_id):
        if task_id in self.tasks:
            del self.tasks[task_id]
            print(f"Task {task_id} deleted")
        else:
            print(f"Task {task_id} not found")

    def view_tasks(self):
        for task_id, task in self.tasks.items():
            print(f"Task {task_id}: {task['name']} - {task['status']}")

def main():
    todo = ToDoList()

    while True:
        print("\n1. Create Task")
        print("2. Update Task")
        print("3. Delete Task")
        print("4. View Tasks")
        print("5. Exit")

        choice = input("Choose an option: ")

        if choice == "1":
            task_id = input("Enter task ID: ")
            task_name = input("Enter task name: ")
            todo.create_task(task_id, task_name)
        elif choice == "2":
            task_id = input("Enter task ID: ")
            task_name = input("Enter new task name (leave blank to keep current): ")
            status = input("Enter new task status (leave blank to keep current): ")
            todo.update_task(task_id, task_name if task_name else None, status if status else None)
        elif choice == "3":
            task_id = input("Enter task ID: ")
            todo.delete_task(task_id)
        elif choice == "4":
            todo.view_tasks()
        elif choice == "5":
            break
        else:
            print("Invalid choice. Please choose a valid option.")

if __name__ == "__main__":
    main()
